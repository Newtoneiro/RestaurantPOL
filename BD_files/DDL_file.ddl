-- Generated by Oracle SQL Developer Data Modeler 21.2.0.165.1515
--   at:        2022-01-28 16:25:49 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLESPACE ii_data 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
FLASHBACK ON;

CREATE USER z03 
    IDENTIFIED BY
    DEFAULT TABLESPACE ii_data
                                            QUOTA 52428800 ON ii_data
                                        QUOTA 52428800 ON ii_data
                                    QUOTA 52428800 ON ii_data
                                QUOTA 52428800 ON ii_data
                            QUOTA 52428800 ON ii_data
                        QUOTA 52428800 ON ii_data
                    QUOTA 52428800 ON ii_data
                QUOTA 52428800 ON ii_data
            QUOTA 52428800 ON ii_data
        QUOTA 52428800 ON ii_data
    QUOTA 52428800 ON ii_data
    ACCOUNT UNLOCK;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE z03.addresses (
    address_id VARCHAR2(100 BYTE) NOT NULL,
    street     VARCHAR2(150 BYTE) NOT NULL,
    post_code  VARCHAR2(150 BYTE) NOT NULL,
    city       VARCHAR2(150 BYTE) NOT NULL,
    country    VARCHAR2(150 BYTE) NOT NULL,
    latitude   FLOAT(20),
    longitude  FLOAT(20)
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

ALTER TABLE z03.addresses
    ADD CONSTRAINT check_lat CHECK ( latitude BETWEEN - 90 AND 90 );

ALTER TABLE z03.addresses
    ADD CONSTRAINT check_long CHECK ( longitude BETWEEN - 180 AND 180 );

CREATE UNIQUE INDEX z03.addresses_pk ON
    z03.addresses (
        address_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.addresses
    ADD CONSTRAINT addresses_primary_key PRIMARY KEY ( address_id )
        USING INDEX z03.addresses_pk;

CREATE TABLE z03.blog_posts (
    blog_post_id      VARCHAR2(100 BYTE) NOT NULL,
    author_id         VARCHAR2(100 BYTE) NOT NULL,
    title             VARCHAR2(100 BYTE) NOT NULL,
    short_description VARCHAR2(250 BYTE) NOT NULL,
    content           VARCHAR2(4000 BYTE) NOT NULL,
    add_date          TIMESTAMP DEFAULT current_timestamp
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.blog_posts_primary_key ON
    z03.blog_posts (
        blog_post_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.blog_posts
    ADD CONSTRAINT blog_posts_primary_key PRIMARY KEY ( blog_post_id )
        USING INDEX z03.blog_posts_primary_key;

CREATE TABLE z03.cuisines (
    cuisine_id VARCHAR2(100 BYTE) NOT NULL,
    name       VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.cuisines_pk ON
    z03.cuisines (
        cuisine_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.cuisines
    ADD CONSTRAINT cuisines_primary_key PRIMARY KEY ( cuisine_id )
        USING INDEX z03.cuisines_pk;

ALTER TABLE z03.cuisines
    ADD CONSTRAINT cuisines_name_un UNIQUE ( name )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE ii_data LOGGING
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT );

CREATE TABLE z03.dishes (
    dish_id       VARCHAR2(100 BYTE) NOT NULL,
    name          VARCHAR2(100 BYTE) NOT NULL,
    price         FLOAT(126) NOT NULL,
    description   VARCHAR2(200 BYTE) NOT NULL,
    restaurant_id VARCHAR2(100 BYTE) NOT NULL,
    img_url       VARCHAR2(200 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

ALTER TABLE z03.dishes ADD CONSTRAINT check_price CHECK ( price >= 0 );

CREATE UNIQUE INDEX z03.dishes_pk ON
    z03.dishes (
        dish_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.dishes
    ADD CONSTRAINT dishes_primary_key PRIMARY KEY ( dish_id )
        USING INDEX z03.dishes_pk;

CREATE TABLE z03.ratings (
    rating_id     VARCHAR2(100 BYTE) NOT NULL,
    restaurant_id VARCHAR2(100 BYTE) NOT NULL,
    descript      VARCHAR2(200 BYTE),
    user_id       VARCHAR2(100 BYTE) NOT NULL,
    rating        NUMBER
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.ratings_pk ON
    z03.ratings (
        rating_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.ratings
    ADD CONSTRAINT ratings_primary_key PRIMARY KEY ( rating_id )
        USING INDEX z03.ratings_pk;

CREATE TABLE z03.ratings_history (
    ratings_history_id NUMBER(*, 0) NOT NULL,
    rating_id          VARCHAR2(100 BYTE) NOT NULL,
    restaurant_id      VARCHAR2(100 BYTE) NOT NULL,
    user_id            VARCHAR2(100 BYTE) NOT NULL,
    date_modified      DATE NOT NULL,
    action             VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.ratings_history_primary_key ON
    z03.ratings_history (
        ratings_history_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.ratings_history
    ADD CONSTRAINT ratings_history_primary_key PRIMARY KEY ( ratings_history_id )
        USING INDEX z03.ratings_history_primary_key;

CREATE TABLE z03.restaurant_history (
    restaurant_history_id NUMBER(*, 0) NOT NULL,
    restaurant_id         VARCHAR2(100 BYTE) NOT NULL,
    date_modified         DATE NOT NULL,
    action                VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.restaurant_history_primary_key ON
    z03.restaurant_history (
        restaurant_history_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.restaurant_history
    ADD CONSTRAINT restaurant_history_primary_key PRIMARY KEY ( restaurant_history_id )
        USING INDEX z03.restaurant_history_primary_key;

CREATE TABLE z03.restaurant_instance (
    restaurant_id          VARCHAR2(100 BYTE) NOT NULL,
    address_id             VARCHAR2(100 BYTE) NOT NULL,
    slug                   VARCHAR2(100 BYTE) NOT NULL,
    restaurant_template_id VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.sys_c00350272 ON
    z03.restaurant_instance (
        restaurant_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.restaurant_instance
    ADD CONSTRAINT ri_primary_key PRIMARY KEY ( restaurant_id )
        USING INDEX z03.sys_c00350272;

CREATE TABLE z03.restaurant_template (
    restaurant_template_id VARCHAR2(100 BYTE) NOT NULL,
    restaurant_name        VARCHAR2(100 BYTE) NOT NULL,
    restaurant_description VARCHAR2(200 BYTE) NOT NULL,
    img_url                VARCHAR2(200 BYTE) NOT NULL,
    cuisine_id             VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.sys_c00350261 ON
    z03.restaurant_template (
        restaurant_template_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.restaurant_template
    ADD CONSTRAINT rt_primary_key PRIMARY KEY ( restaurant_template_id )
        USING INDEX z03.sys_c00350261;

ALTER TABLE z03.restaurant_template
    ADD CONSTRAINT rt_name_un UNIQUE ( restaurant_name )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE ii_data LOGGING
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT );

CREATE TABLE z03.reviews (
    review_id VARCHAR2(100 BYTE) NOT NULL,
    username  VARCHAR2(100 BYTE) NOT NULL,
    rating    NUMBER(*, 0) NOT NULL,
    descript  VARCHAR2(200 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

ALTER TABLE z03.reviews
    ADD CONSTRAINT check_rating CHECK ( rating IN ( 1, 2, 3, 4, 5 ) );

CREATE UNIQUE INDEX z03.reviews_primary_key ON
    z03.reviews (
        review_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.reviews
    ADD CONSTRAINT reviews_primary_key PRIMARY KEY ( review_id )
        USING INDEX z03.reviews_primary_key;

CREATE TABLE z03.user_history (
    user_history_id NUMBER(*, 0) NOT NULL,
    user_id         VARCHAR2(100 BYTE) NOT NULL,
    username        VARCHAR2(100 BYTE) NOT NULL,
    admin           CHAR(1 BYTE) NOT NULL,
    date_modified   DATE NOT NULL,
    action          VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.user_history_primary_key ON
    z03.user_history (
        user_history_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.user_history
    ADD CONSTRAINT user_history_primary_key PRIMARY KEY ( user_history_id )
        USING INDEX z03.user_history_primary_key;

CREATE TABLE z03.users (
    user_id              VARCHAR2(100 BYTE) NOT NULL,
    username             VARCHAR2(100 BYTE) NOT NULL,
    password             VARCHAR2(100 BYTE) NOT NULL,
    first_name           VARCHAR2(100 BYTE) NOT NULL,
    last_name            VARCHAR2(100 BYTE) NOT NULL,
    email                VARCHAR2(100 BYTE) NOT NULL,
    admin                CHAR(1 BYTE) DEFAULT 'N',
    favourite_restaurant VARCHAR2(100 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE ii_data LOGGING
    STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
ROW STORE COMPRESS ADVANCED NO INMEMORY;

CREATE UNIQUE INDEX z03.email_unique ON
    z03.users (
        email
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

CREATE UNIQUE INDEX z03.username_unique ON
    z03.users (
        username
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

CREATE UNIQUE INDEX z03.users_pk ON
    z03.users (
        user_id
    ASC )
        TABLESPACE ii_data PCTFREE 10
            STORAGE ( INITIAL 16384 NEXT 16384 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE z03.users
    ADD CONSTRAINT users_primary_key PRIMARY KEY ( user_id )
        USING INDEX z03.users_pk;

ALTER TABLE z03.users
    ADD CONSTRAINT email_unique UNIQUE ( email )
        USING INDEX z03.email_unique;

ALTER TABLE z03.users
    ADD CONSTRAINT username_unique UNIQUE ( username )
        USING INDEX z03.username_unique;

ALTER TABLE z03.blog_posts
    ADD CONSTRAINT author_fk FOREIGN KEY ( author_id )
        REFERENCES z03.users ( user_id )
    NOT DEFERRABLE;

ALTER TABLE z03.restaurant_instance
    ADD CONSTRAINT is_of_type FOREIGN KEY ( restaurant_template_id )
        REFERENCES z03.restaurant_template ( restaurant_template_id )
    NOT DEFERRABLE;

ALTER TABLE z03.dishes
    ADD CONSTRAINT is_served_at FOREIGN KEY ( restaurant_id )
        REFERENCES z03.restaurant_instance ( restaurant_id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE z03.users
    ADD CONSTRAINT marked_as_favourite FOREIGN KEY ( favourite_restaurant )
        REFERENCES z03.restaurant_instance ( restaurant_id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE z03.restaurant_instance
    ADD CONSTRAINT placed_at FOREIGN KEY ( address_id )
        REFERENCES z03.addresses ( address_id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE z03.ratings
    ADD CONSTRAINT posted_by FOREIGN KEY ( user_id )
        REFERENCES z03.users ( user_id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE z03.ratings
    ADD CONSTRAINT refers_to FOREIGN KEY ( restaurant_id )
        REFERENCES z03.restaurant_instance ( restaurant_id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE z03.restaurant_template
    ADD CONSTRAINT represents_cuisine FOREIGN KEY ( cuisine_id )
        REFERENCES z03.cuisines ( cuisine_id )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER Z03.RATINGS_HISTORY_SET_KEY 
    BEFORE INSERT ON Z03.RATINGS_HISTORY 
    FOR EACH ROW 
begin
      SELECT ratings_history_id_seq.nextval
      INTO :new.ratings_history_id
      FROM dual;
end; 
/

CREATE OR REPLACE TRIGGER Z03.RATINGS_MODIFY_ADD 
    BEFORE INSERT ON Z03.RATINGS 
    FOR EACH ROW 
begin
    ratings_history_functions.insert_data(:new.rating_id, :new.restaurant_id, :new.user_id, 'added');
end; 
/

CREATE OR REPLACE TRIGGER Z03.RATINGS_MODIFY_DELETE 
    BEFORE DELETE ON Z03.RATINGS 
    FOR EACH ROW 
begin
    ratings_history_functions.insert_data(:old.rating_id, :old.restaurant_id, :old.user_id, 'deleted');
end; 
/

CREATE OR REPLACE TRIGGER Z03.RESTAURANT_HISTORY_SET_KEY 
    BEFORE INSERT ON Z03.RESTAURANT_HISTORY 
    FOR EACH ROW 
begin
      SELECT restaurant_history_id_seq.nextval
      INTO :new.restaurant_history_id
      FROM dual;
end; 
/

CREATE OR REPLACE TRIGGER Z03.RESTAURANT_INSTANCE_MODIFY_ADD 
    BEFORE INSERT ON Z03.RESTAURANT_INSTANCE 
    FOR EACH ROW 
begin
    restaurant_history_functions.insert_data(:new.restaurant_id, 'added');
end; 
/

CREATE OR REPLACE TRIGGER Z03.RESTAURANT_INSTANCE_MODIFY_DELETE 
    BEFORE DELETE ON Z03.RESTAURANT_INSTANCE 
    FOR EACH ROW 
begin
    restaurant_history_functions.insert_data(:old.restaurant_id, 'deleted');
end; 
/

CREATE OR REPLACE TRIGGER Z03.RESTAURANT_SLUG 
    BEFORE INSERT ON Z03.RESTAURANT_INSTANCE 
    FOR EACH ROW 
DECLARE
    v_same_slug_count NUMBER;
    v_counter NUMBER;
    v_temporary_slug VARCHAR2(100) := :new.slug;
BEGIN
    SELECT COUNT(restaurant_id)
    INTO v_same_slug_count
    FROM restaurant_instance
    WHERE slug LIKE CONCAT(:new.slug, '%');

    if v_same_slug_count > 0 then
        v_temporary_slug := CONCAT(CONCAT(v_temporary_slug, '-'), v_same_slug_count);
        select count(*)
        into v_counter
        from restaurant_instance
        where slug = v_temporary_slug;

        while v_counter > 0 
        loop
            v_same_slug_count := v_same_slug_count + 1;
            v_temporary_slug := CONCAT(CONCAT(v_temporary_slug, '-'), v_same_slug_count);
            select count(*)
            into v_counter
            from restaurant_instance
            where slug = v_temporary_slug;
        end loop;
    end if;
    :new.slug := v_temporary_slug;
END; 
/

CREATE OR REPLACE TRIGGER Z03.USER_HISTORY_SET_KEY 
    BEFORE INSERT ON Z03.USER_HISTORY 
    FOR EACH ROW 
begin
      SELECT user_history_id_seq.nextval
      INTO :new.user_history_id
      FROM dual;
end; 
/

CREATE OR REPLACE TRIGGER Z03.USER_MODIFY_ADD 
    BEFORE INSERT ON Z03.USERS 
    FOR EACH ROW 
begin
    user_history_functions.insert_data(:new.user_id, :new.username, :new.admin, 'added');
end; 
/

CREATE OR REPLACE TRIGGER Z03.USER_MODIFY_DELETE 
    BEFORE DELETE ON Z03.USERS 
    FOR EACH ROW 
begin
    user_history_functions.insert_data(:old.user_id, :old.username, :old.admin, 'deleted');
end; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                            14
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 1
